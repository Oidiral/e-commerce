services:
  auth-db:
    container_name: auth-db
    image: postgres:15
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASSWORD}
      POSTGRES_DB: ${AUTH_DB_NAME}
    ports:
      - "5433:5432"
    volumes:
      - auth_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "auth_user", "-d", "auth" ]
      interval: 5s
      timeout: 3s
      retries: 10

  catalog-db:
    image: postgres:15
    container_name: catalog-db
    environment:
      POSTGRES_USER: catalog_user
      POSTGRES_PASSWORD: catalog_pass
      POSTGRES_DB: catalog
    ports:
      - "5434:5432"
    volumes:
      - catalog_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready -U catalog_user -d catalog" ]
      interval: 10s
      timeout: 5s
      retries: 5

  cart-db:
    image: postgres:15
    container_name: cart-db
    environment:
      POSTGRES_USER: cart_user
      POSTGRES_PASSWORD: cart_pass
      POSTGRES_DB: cart
    ports:
      - "5435:5432"
    volumes:
      - cart_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready -U cart_user -d cart" ]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-svc:
    container_name: auth-svc
    image: auth-svc:latest
    build:
      context: ./services/auth-svc
      dockerfile: Dockerfile
    environment:
      AUTH_DB_HOST: auth-db
    depends_on:
      auth-db:
        condition: service_healthy
    env_file:
      - ./services/auth-svc/.env
      - ./.env
    volumes:
      - ./services/auth-svc/config/private.pem:/app/config/private.pem:ro
      - ./services/auth-svc/config/public.pem:/app/config/public.pem:ro
    ports:
      - "8081:8080"

  cart-svc:
    container_name: cart-svc
    image: cart-svc:latest
    build:
      context: ./services/cart-svc
      dockerfile: Dockerfile
    environment:
      CART_DB_HOST: cart-db
    depends_on:
      - cart-db
      - auth-svc
      - redis
    env_file:
      - ./services/cart-svc/.env
      - ./.env
    ports:
        - "8082:8081"


  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"


  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"


volumes:
  minio_data:
  auth_pgdata:
  catalog_pgdata:
  cart_pgdata:

